/* ==============================================================
   Q01 – TOP 5 CURSOS COM MAIS INSCRIÇÕES **ATIVAS**
   RETORNE: ID_CURSO · NOME · TOTAL_INSCRITOS
=================================================================*/

SELECT  C.ID_CURSO AS ID_CURSO,
        C.NOME     AS NOME,
        COUNT(*)   AS TOTAL_INSCRITOS
FROM   "CURSOS" C
LEFT JOIN "INSCRICOES" I ON I.ID_CURSO = C.ID_CURSO
AND I.STATUS   = 'ATIVO' 
GROUP BY C.ID_CURSO, C.NOME
ORDER BY TOTAL_INSCRITOS DESC
LIMIT 5

/* ==============================================================
   Q02 – TAXA DE CONCLUSÃO POR CURSO
   PARA CADA CURSO, CALCULE:
     • TOTAL_INSCRITOS
     • TOTAL_CONCLUIDOS   (STATUS = 'CONCLUÍDA')
     • TAXA_CONCLUSAO (%) = CONCLUÍDOS / INSCRITOS * 100
   ORDENE DESCENDENTEMENTE PELA TAXA DE CONCLUSÃO.
=================================================================*/

WITH BASE AS (SELECT C.ID_CURSO,
                     C.NOME,
                     COUNT(I.ID_ALUNO)                              AS TOTAL_INSCRITOS, 
                     COUNT(*) FILTER (WHERE I.STATUS = 'CONCLUIDO') AS TOTAL_CONCLUIDOS 
              FROM "CURSOS" C
              LEFT JOIN "INSCRICOES" I  ON I.ID_CURSO = C.ID_CURSO
              GROUP BY C.ID_CURSO, 
                       C.NOME)

SELECT ID_CURSO,
       NOME,
       TOTAL_INSCRITOS,
       TOTAL_CONCLUIDOS,
       ROUND(COALESCE(100.0 * TOTAL_CONCLUIDOS / NULLIF(TOTAL_INSCRITOS, 0), 0)) AS TAXA_CONCLUSAO
FROM BASE
ORDER BY TAXA_CONCLUSAO DESC, 
         TOTAL_CONCLUIDOS DESC, 
         TOTAL_INSCRITOS DESC, 
         NOME

/* ==============================================================
   Q03 – TEMPO MÉDIO (DIAS) PARA CONCLUIR CADA **NÍVEL** DE CURSO
   DEFINIÇÕES:
     • INÍCIO = DATA_INSC   (TABELA INSCRICOES)
     • FIM    = MAIOR DATA EM PROGRESSO ONDE PORCENTAGEM = 100
   CALCULE A MÉDIA DE DIAS ENTRE INÍCIO E FIM,
   AGRUPANDO POR CURSOS.NIVEL (EX.: BÁSICO, AVANÇADO).

   OBSERVAÇÕES DA CONSULTA

   DURANTE O DESENVOLVIMENTO DA QUERY, IDENTIFIQUEI ALGUNS CASOS QUE PODEM IMPACTAR DIRETAMENTE NO RESULTADO ESPERADO. SÃO ELES:
   1 - NÃO EXISTE NA BASE DE DADOS NENHUM MÓDULO COM 100% DE CONCLUSÃO, COLOQUEI A CONDICIONAL DENTRO DA QUERY, MAS, SE EXERCUTARMOS COM ESSA CONDIÇÃO NÃO TEREMOS NENHUM RESULTADO;
   2 - IDENTIFIQUEI MÓDULO COM A DATA DE ÚLTIMA ATIVIDADE MENOR QUE A DATA DE INSCRIÇÃO, O QUE, OCASIONOU O RETORNO DE VALORES NEGATIVOS QUE IMPACTARIAM DIRETAMENTE NO RESULTADO AGUARDADO;
   3 - IDENTIFIQUEI QUE EXISTEM MÓDULO COM O STATUS CONCLUÍDO, PORÉM, NÃO TEM DATA DE ÚLTIMA ATIVIDADE.
=================================================================*/

WITH TEMPO_MODULO AS (SELECT  C.ID_CURSO,
                              C.NOME,
                              C.NIVEL,
                              M.TITULO,
                              I.DATA_INSCRICAO,
                              I.ID_ALUNO,
                              I.STATUS STATUS_CURSO,
                              MAX(P.DATA_ULTIMA_ATIVIDADE) MAIOR_DATA_ULT_ATIVIDADE,
                              P.PERCENTUAL,
                              (MAX(P.DATA_ULTIMA_ATIVIDADE)::DATE - I.DATA_INSCRICAO::DATE)          AS DIF_DIAS,
                           AGE(MAX(P.DATA_ULTIMA_ATIVIDADE)::TIMESTAMP, I.DATA_INSCRICAO::TIMESTAMP) AS DIF_INTERVALO  
                        FROM   "MODULOS" M 
                        LEFT JOIN "CURSOS" C     ON M.ID_CURSO = C.ID_CURSO 
                        LEFT JOIN "INSCRICOES" I ON C.ID_CURSO = I.ID_CURSO 
                        LEFT JOIN "PROGRESSO" P  ON P.ID_MODULO = M.ID_MODULO AND P.ID_ALUNO = I.ID_ALUNO
                        WHERE P.DATA_ULTIMA_ATIVIDADE IS NOT NULL --ACRESCENTEI ESSA CONDICIONAL PARA NAO IMPACTAR NO CÁLCULO DA MÉDIA POR MÓDULO
                        AND   P.PERCENTUAL = 100 

                        GROUP BY C.ID_CURSO,
                                 C.NOME,
                                 C.NIVEL,
                                 M.TITULO,
                                 I.DATA_INSCRICAO,
                                 I.ID_ALUNO,
                                 I.STATUS,
                                 P.PERCENTUAL)

SELECT NIVEL,
       ROUND(AVG(DIF_DIAS), 2) MEDIA_DIAS
FROM   TEMPO_MODULO
WHERE  DIF_DIAS > 0 --ACRESCENTEI ESSA CONDICIONAL PARA ELIMINAR OS CASOS ONDE A DIFERENÇA ENTRE AS DATAS ESTÃO NEGATIVO EVITANDO IMPACTAR NO CÁLCULO DA MÉDIA POR MÓDULO 
GROUP BY NIVEL 

/* ==============================================================
   Q04 – TOP 10 MÓDULOS COM MAIOR **TAXA DE ABANDONO**
   - CONSIDERE ABANDONO QUANDO PORCENTAGEM < 20 %
   - INCLUA APENAS MÓDULOS COM PELO MENOS 20 ALUNOS
   RETORNE: ID_MODULO · TITULO · ABANDONO_PCT
   ORDENE DO MAIOR PARA O MENOR.

   OBSERVAÇÕES DA CONSULTA

   DURANTE O DESENVOLVIMENTO DA QUERY, IDENTIFIQUEI ALGUNS CASOS QUE PODEM IMPACTAR DIRETAMENTE NO RESULTADO ESPERADO. SÃO ELES:
   1 - NA BASE ENVIADA, NÃO IDENTIFIQUEI NENHUM MÓDULO COM PELO MENOS 20 ALUNOS. POR ESSE MOTIVO NÃO INCLUI ESSA CONDICIONAL NA QUERY.
   2 - A TABELA MODULOS NÃO TEM UMA SK DEFINIDA.
   3 - NÃO FICOU BEM DEFINIDO QUAIS CRITÉRIO DEVERIAM SER CONSIDERADOS PARA DETERMINAR SE O ALUNO ESTÁ ATIVO OU NÃO NO MÓDULO. 
=================================================================*/

SELECT ID_MODULO,
       TITULO,
       ROUND( 100.0 * QTDE_ALUNOS_DESIS::NUMERIC / NULLIF(QTDE_ALUNOS,0), 2 ) AS ABANDONO_PCT
FROM (

SELECT M.ID_MODULO,
       M.TITULO,
       COUNT (P.ID_ALUNO) QTDE_ALUNOS_DESIS,
       (SELECT COUNT (INS.ID_ALUNO)
        FROM "INSCRICOES" INS
        WHERE INS.ID_CURSO = M.ID_CURSO) QTDE_ALUNOS
FROM   "MODULOS" M
LEFT JOIN "INSCRICOES" I ON I.ID_CURSO = M.ID_CURSO
LEFT JOIN "PROGRESSO" P  ON P.ID_MODULO = M.ID_MODULO AND P.ID_ALUNO = I.ID_ALUNO
WHERE P.PERCENTUAL <= 50 
GROUP BY M.ID_MODULO,
         M.TITULO,
         M.ID_CURSO)

/* ==============================================================
   Q05 – CRESCIMENTO DE INSCRIÇÕES (JANELA MÓVEL DE 3 MESES)
   1. PARA CADA MÊS CALENDÁRIO (YYYY-MM), CONTE INSCRIÇÕES.
   2. CALCULE A SOMA MÓVEL DE 3 MESES (MÊS ATUAL + 2 ANTERIORES) → ROLLING_3M.
   3. CALCULE A VARIAÇÃO % EM RELAÇÃO À JANELA ANTERIOR.
   RETORNE: ANO_MES · INSCRICOES_MES · ROLLING_3M · VARIACAO_PCT
=================================================================*/

WITH QTDE_INSCRICOES AS (SELECT TO_CHAR(I.DATA_INSCRICAO, 'YYYY-MM') ANO_MES,
                                COUNT(*) QTDE_INSCRICOES
                         FROM   "INSCRICOES" I 
                         GROUP BY TO_CHAR(I.DATA_INSCRICAO, 'YYYY-MM')),

     ROLLING_3M AS      (SELECT ANO_MES,
                                QTDE_INSCRICOES,
                                SUM(QTDE_INSCRICOES) OVER (
                                ORDER BY ANO_MES
                                ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) AS ROLLING_3M
                         FROM QTDE_INSCRICOES),
      VARIACAO AS      (SELECT *,
                               LAG(ROLLING_3M) OVER (ORDER BY ANO_MES) AS ROLLING_3M_VAR
                        FROM ROLLING_3M)

SELECT ANO_MES,
       QTDE_INSCRICOES,
       ROLLING_3M,
       ROUND(100.0 * (ROLLING_3M - ROLLING_3M_VAR) / NULLIF(ROLLING_3M_VAR, 0), 2) AS VARIACAO_PCT
       
FROM   VARIACAO V